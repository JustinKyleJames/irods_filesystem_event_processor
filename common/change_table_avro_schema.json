{
    "type": "record",
    "name": "ChangeMap",
    "fields": [
        {
            "name": "entries",
            "type": {
                "type": "array",
                "items": {
                    "name": "ChangeDescriptor",
                    "type": "record",
                    "fields": [
                        {"name": "objectIdentifier", "type": "string"},
                        {"name": "parentObjectIdentifier", "type": "string"},
                        {"name": "objectName", "type": "string"},
                        {"name": "filePath", "type": "string"},

                        {"name": "eventType", "type": 
                            { "type": "enum", "name": "EventTypeEnum", "symbols": ["OTHER", "CREATE", "UNLINK", "RMDIR", "MKDIR", "RENAME", "WRITE_FID"] } 
                        },
                        {"name": "objectType", "type": 
                            { "type": "enum", "name": "ObjectTypeEnum", "symbols": ["FILE", "DIR"] }
                        },
                        {"name": "timestamp", "type": "long"},
                        {"name": "operComplete", "type": "boolean"},
                        {"name": "fileSize", "type": "long"},
                        {"name": "crIndex", "type": "long"}
                    ]
                }
            }
        },
        {
            "name": "registerMap",
            "type": {
                "type": "array",
                "items": {
                    "name": "RegisterMapEntry",
                    "type": "record",
                    "fields": [
                        {"name": "filePath", "type": "string"},
                        {"name": "irodsRegisterPath", "type": "string"}
                    ]
                }
            }
        }
        {    "name": "resourceId", "type": "long"}, 
        {    "name": "updateStatus", "type": "string"},
        {    "name": "irodsApiUpdateType", "type": "string"},
        {    "name": "resourceName", "type": "string"},
        {    "name": "maximumRecordsPerSqlCommand", "type": "long"},
        {    "name": "setMetadataForStorageTieringTimeViolation", "type": "boolean"},
        {    "name": "metadataKeyForStorageTieringTimeViolation", "type": "string"}
    ]
}

